/* (c) https://github.com/MontiCore/monticore */
/* Originated by MontiCore/RWTH Aachen (CC BY 4.0)*/

import java.time.ZonedDateTime;

classdiagram Staff {



  //------------------------------------------------------------
  // ======================= PERSONAL =========================
  //------------------------------------------------------------

  class Person {
    String vorname;
    String nachname;
    String kuerzel;
    Optional<String> personalnummer;
    Optional<ZonedDateTime> gebDatum;
    Optional<ZonedDateTime> beschBeginn;
    Optional<ZonedDateTime> beschEnde;
    List<String> kommentar;
    boolean istAktiv;
    boolean istStundenzettelpflichtig = false;
    Optional<ZonedDateTime> stundenzettelpflichtigVon;
    Optional<ZonedDateTime> stundenzettelpflichtigBis;
    Optional<Long> ueberStundenUebertrag;
    boolean darfWochenendarbeiten;
    // Start Large Organizational Units:
    Optional<ZonedDateTime> hoechstbeschaeftigungBis;
    List<String> staatsangehoerigkeiten;
    Optional<String> telefonnummer;
    Optional<ZonedDateTime> arbeitserlaubnisBis;
    boolean extern;
    Optional<String> titel;
    Optional<String> rufname;
    Optional<String> adresse;
    Optional<String> email;
    Optional<String> geburtsname;
    Optional<String> geschlecht;
    Optional<String> lBVNummer;
    Optional<ZonedDateTime> entfristung;
    Optional<String> qualifikationstitel;
    boolean speicherungGewuenscht = false;
  }

  association [1] Person -> (anstellungsarten) Anstellungsart [*];

  //FÃ¼r Studentenzettel:
  association [1] Person -> (jahresurlaubstage) Jahresurlaub [*];
  association [1] Person -> (zusatzurlaubstage) Sonderurlaub [*];
  association [1] Person -> (stundenzettel) Stundenzettel [*];
  association [1] Person -> (abwesenheiten) Abwesenheit [*];


  association [1] Person -> (user) DomainUser [0..1];


  //----------------------------------------------
  // Person -> *Anstellungsart

  class Anstellungsart {
    BeschaeftigungsArt beschArt;
  }

  association [1] Anstellungsart -> (vertraege) Vertrag [*];
  association [1] Anstellungsart -> (anstellungsformen) Anstellungsform [*];

  enum BeschaeftigungsArt {
      WiMi,
      HiWi,
      BTV,
      BEAMTE,
      AZUBI,
      PLAN;}

  //----------------------------------------------
  // Person -> *Anstellungsart -> *Vertrag

  class Vertrag {
    ZonedDateTime vertragsBeginn;
    ZonedDateTime vertragsEnde;
    String vertragsStatus;
    List<String> kommentar;
    ZahlenWert planUmfang;
    Optional<Long> arbeitsstundenProWoche;
    boolean kuendigungsschutz;
    Optional<String> vertragsgrundlage;
    Optional<String> aktion;
  }

  association [1] Vertrag -> (kostenstellen) Kostenstelle [*];

  //----------------------------------------------
  // Person -> *Anstellungsart -> Anstellungsform

  class Anstellungsform {
    boolean erstanstellung;
    Optional<String> entgeltGruppe;
    Optional<String> erfahrungsStufe;
    boolean unbefristet;
    ZonedDateTime anstellungVon;
    Optional<ZonedDateTime> anstellungBis;
    long gehaltCent;
    boolean istEigenerReferenzwert;
    List<String> kommentar;
    Optional<String> berufsgruppe;
  }

  //----------------------------------------------
  // Person -> *Anstellungsart -> *Vertrag -> *Kostenstelle

  class Kostenstelle {
    ZonedDateTime verbuchungsBeginn;
    ZonedDateTime verbuchungsEnde;
    KostenstelleBezeichnung bezeichnung;
    List<String> kommentar;
    ZahlenWert beschaeftigungsUmfang;
    boolean buchungenNeuErzeugen;
    boolean buchungenLoeschen;
    boolean gesperrt;
  }

  enum KostenstelleBezeichnung {
    NONE,
    AN_INSTITUT,
    GMBH,
    ANDERER_LEHRSTUHL,
    ANDERES_INSTITUT,
    VORUEBERGEHEND_ABWESEND,
    ANDERE_FINANZIERUNG;
  }

  association Kostenstelle -> (personalBudget) Budget [0..1];
  association Kostenstelle -> (stellenzuweisung) Stellenzuweisung [0..1];
  association Kostenstelle -> (planstelle) Planstelle [0..1];
  association [0..1] Kostenstelle -> (personalBuchungen) Buchung [*];

  class Planstelle {
    String bezeichnung;
    Optional<String> minEntgeltgruppe;
    Optional<String> minEntgeltstufe;
    Optional<String> maxEntgeltgruppe;
    Optional<String> maxEntgeltstufe;
    Optional<ZonedDateTime> verfuegbarVon;
    Optional<ZonedDateTime> verfuegbarBis;
    Optional<String> kommentar;
    ZahlenWert planUmfang;
  }

  association Planstelle -> (konto) Konto [0..1];

  //----------------------------------------------
  // Large Organizational Units

  class Elternzeit {
    Optional<ZonedDateTime> von;
    Optional<ZonedDateTime> bis;
    ZahlenWert umfang;
  }

  class Nebentaetigkeit {
    Optional<ZonedDateTime> von;
    Optional<ZonedDateTime> bis;
    ZahlenWert umfang;
    Optional<String> arbeitgeber;
    Optional<String> taetigkeitsbereich;
  }

  class Zulage  {
    Optional<ZonedDateTime> von;
    Optional<ZonedDateTime> bis;
    long betrag;
  }

  enum Geschlecht {
    NONE,
    WEIBLICH,
    MAENNLICH,
    DIVERS;
  }

  enum Titel {
    NONE,
    E1,
    E2,
    E3,
    E4,
    E5,
    E6,
    E7,
    E8,
    E9,
    E10,
    E11,
    E12,
    E13,
    E14,
    E15,
    E16,
    E17,
    E18,
    E19,
    E20;
  }

  enum Berufsgruppe {
    NONE,
    E1,
    E2,
    E3,
    E4,
    E5,
    E6,
    E7,
    E8,
    E9,
    E10,
    E11,
    E12,
    E13,
    E14,
    E15,
    E16,
    E17,
    E18,
    E19,
    E20,
    E21,
    E22,
    E23,
    E24,
    E25;
  }

  enum Aktion {
      NONE,
      ANFRAGE_VERSENDET,
      ERINNERUNG_VERSENDET,
      ZUR_UNTERSCHRIFT_BEIM_VORGESETZTEN,
      BEI_ZHV_VORGELEGT,
      VON_ZHV_BESTAETIGT;
    }

  enum Vertragsgrundlage {
      NONE,
      E1,
      E2,
      E3,
      E4,
      E5,
      E6,
      E7,
      E8,
      E9,
      E10,
      E11,
      E12,
      E13,
      E14,
      E15,
      E16,
      E17,
      E18,
      E19,
      E20,
      E21,
      E22,
      E23,
      E24;
    }

  association [1] Person -> (elternzeiten) Elternzeit [*];
  association [1] Person -> (nebentaetigkeiten) Nebentaetigkeit[*];
  association [1] Person -> (zulagen) Zulage [*];

}
