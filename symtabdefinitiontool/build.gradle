/* (c) https://github.com/MontiCore/monticore */
plugins {
  id "com.github.johnrengelman.shadow" version "6.0.0"
}

description = "SymTabDefinition: Tool"

dependencies {
  implementation(project(':cdlang'))

  implementation "de.monticore:monticore-grammar:${project.properties['mc_version']}"
  implementation "de.monticore:monticore-runtime:${project.properties['mc_version']}"
  implementation "de.monticore:class2mc:${project.properties['mc_version']}"
  implementation "de.se_rwth.commons:se-commons-logging:$commons_version"
  implementation "de.se_rwth.commons:se-commons-utilities:$commons_version"
  implementation "commons-cli:commons-cli:$commons_cli_version"
  implementation "org.apache.commons:commons-lang3:$commons_lang_version"
  implementation "org.antlr:antlr4-runtime:$antlr_version"
  testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
  testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_version"
  testImplementation "org.junit.vintage:junit-vintage-engine:$junit_version"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"
}

task toolJar(type: Jar) {
  from sourceSets.main.output + sourceSets.main.allSource
}

apply plugin: "com.github.johnrengelman.shadow"
  shadowJar {
    manifest {
      attributes "Main-Class": "de.monticore.symtabdefinition.SymTabDefinitionTool"
    }
    archiveFileName = "MCSTD.jar"
    archiveClassifier = "std-tool"
  }
assemble.dependsOn(shadowJar)

jar.dependsOn(shadowJar)

// tool test

sourceSets {
  tooltest
}

dependencies {
  tooltestImplementation platform('org.junit:junit-bom:5.9.1')
  tooltestImplementation 'org.junit.jupiter:junit-jupiter'
}

tasks.register('toolTest', Test) {
  description = 'Runs tool integration tests.'
  group = 'verification'

  testClassesDirs = sourceSets.tooltest.output.classesDirs
  classpath = sourceSets.tooltest.runtimeClasspath
  shouldRunAfter test
  dependsOn shadowJar

  useJUnitPlatform()

  testLogging {
    events "passed"
  }

  // Pass path to the tool jar to the test
  systemProperty "toolJarFile",  tasks.shadowJar.outputs.files.singleFile
  // Pass mc_version to the test
  systemProperty "mc_version",  mc_version
}

check.dependsOn toolTest
