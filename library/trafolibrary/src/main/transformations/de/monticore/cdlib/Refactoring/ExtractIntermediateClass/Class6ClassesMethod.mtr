/* (c) https://github.com/MontiCore/monticore */
package de.monticore.cdlib.Refactoring;
transformation Class6ClassesMethod {
  classdiagram $_{
    class $parent;

    CDClass $Sub1 [[ class $subclass1 extends [[ $parent :- $newParent ]] {
      [[ CDMethod $A1  :- ]]
    } ]]

    CDClass $Sub2 [[ class $subclass2 extends [[ $parent :- $newParent ]] {
       [[ CDMethod $A2 :- ]]
    } ]]

    CDClass $Sub3 [[ class $subclass3 extends [[ $parent :- $newParent ]] {
       [[ CDMethod $A3 :- ]]
    } ]]

    CDClass $Sub4 [[ class $subclass4 extends [[ $parent :- $newParent ]] {
       [[ CDMethod $A4 :- ]]
    } ]]

    CDClass $Sub5 [[ class $subclass5 extends [[ $parent :- $newParent ]] {
       [[ CDMethod $A5 :- ]]
    } ]]

    CDClass $Sub6 [[ class $subclass6 extends [[ $parent :- $newParent ]] {
       [[ CDMethod $A6 :- ]]
    } ]]

    [[ :- class $newParent extends $parent{
       CDMethod $A1
    } ]]
  }

  assign{
    $newParent = $Sub1.getName().concat($Sub2.getName()).concat($Sub3.getName());
  }

  where{
    $A2.deepEquals($A1)&&
    $A4.deepEquals($A1)&&
    $A5.deepEquals($A1)&&
    $A6.deepEquals($A1)&&
    $A3.deepEquals($A1)
  }
}
