import org.gradle.api.JavaVersion

/* (c) https://github.com/MontiCore/monticore */
plugins {
  id "groovy"
  id "java-gradle-plugin"
  id 'maven-publish'
}

group = "de.monticore.lang"
description = "CD4Analysis Gradle Plugin"
sourceCompatibility = JavaVersion.VERSION_1_8
buildDir = file("$projectDir/target")

repositories {
  if (("true").equals(getProperty('useLocalRepo'))) {
    mavenLocal()
  }
  maven {
    credentials.username mavenUser
    credentials.password mavenPassword
    url repo
  }
  mavenCentral()
}

dependencies {
  implementation gradleApi()
  implementation localGroovy()
  implementation "de.monticore.lang:cd4analysis:${version}:cli"
}

gradlePlugin {
  // Define the plugin
  plugins {
    greeting {
      id = 'cd4analysis'
      implementationClass = 'de.monticore.CDPlugin'
    }
  }
}


task sourcesJar(type: Jar, dependsOn: classes) {
  archiveClassifier = 'sources'
  from sourceSets.main.allSource
}

tasks.register("prepareKotlinBuildScriptModel"){}

// configure deployment
publishing {
  // configure what artifacts to publish
  publications {
    pluginMaven(MavenPublication) {
      artifact sourcesJar
    }
  }
  repositories.maven {
    credentials.username mavenUser
    credentials.password mavenPassword
    def releasesRepoUrl = "https://nexus.se.rwth-aachen.de/content/repositories/monticore-releases/"
    def snapshotsRepoUrl = "https://nexus.se.rwth-aachen.de/content/repositories/monticore-snapshots/"
    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
  }
}
