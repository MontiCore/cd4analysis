package de.monticore.cd4code._symboltable.phased;

import de.monticore.cd4code._symboltable.ICD4CodeArtifactScope;
import de.monticore.cd4code._symboltable.ICD4CodeScope;
import de.se_rwth.commons.logging.Log;

import java.util.ArrayList;
import java.util.Deque;
import java.util.Optional;

public class CD4CodeScopeSkeletonCreator implements de.monticore.cd4code._visitor.CD4CodeVisitor {

  /* generated by template core.Attribute*/
  protected Deque<ICD4CodeScope> scopeStack = new java.util.ArrayDeque<>();

  /* generated by template core.Attribute*/
  private  de.monticore.cd4code._visitor.CD4CodeVisitor realThis = this;

  /* generated by template core.Attribute*/
  protected  de.monticore.cd4code._symboltable.ICD4CodeScope firstCreatedScope ;


  /* generated by template core.Constructor*/
  public CD4CodeScopeSkeletonCreator(de.monticore.cd4code._symboltable.ICD4CodeScope enclosingScope)  {
    putOnStack(Log.errorIfNull(enclosingScope));
  }

  /* generated by template core.Constructor*/
  public CD4CodeScopeSkeletonCreator(Deque<? extends de.monticore.cd4code._symboltable.ICD4CodeScope> scopeStack)  {
    this.scopeStack = Log.errorIfNull((Deque<de.monticore.cd4code._symboltable.ICD4CodeScope>)scopeStack);
  }


  /* generated by template core.Method*/
  public  de.monticore.cd4code._visitor.CD4CodeVisitor getRealThis ()  {
    /* generated by template methods.Get*/

    return this.realThis;

  }

  /* generated by template core.Method*/
  public  void setRealThis (de.monticore.cd4code._visitor.CD4CodeVisitor realThis)  {
    /* generated by template methods.Set*/

    this.realThis = realThis;

  }

  /* generated by template core.Method*/
  public  de.monticore.cd4code._symboltable.ICD4CodeScope getFirstCreatedScope ()  {
    /* generated by template methods.Get*/

    return this.firstCreatedScope;

  }

  /* generated by template core.Method*/
  public  de.monticore.cd4code._symboltable.ICD4CodeArtifactScope createFromAST (de.monticore.cdbasis._ast.ASTCDCompilationUnit rootNode)  {
    /* generated by template _symboltable.symboltablecreator.CreateFromAST*/

    Log.errorIfNull(rootNode, "0xA7004x323358695 Error by creating of the CD4CodeSymbolTableCreator symbol table: top ast node is null");
    ICD4CodeArtifactScope artifactScope = de.monticore.cd4code.CD4CodeMill.artifactScope();
    artifactScope.setPackageName("");
    artifactScope.setImportsList(new ArrayList<>());
    putOnStack(artifactScope);
    rootNode.accept(getRealThis());
    return artifactScope;
  }

  /* generated by template core.Method*/
  public  void putOnStack (de.monticore.cd4code._symboltable.ICD4CodeScope scope)  {
    /* generated by template _symboltable.symboltablecreator.PutOnStack*/
    Log.errorIfNull(scope);

    if (scope.getEnclosingScope() == null && getCurrentScope().isPresent()) {
      scope.setEnclosingScope(getCurrentScope().get());
      getCurrentScope().get().addSubScope(scope);
    } else if (scope.getEnclosingScope() != null && getCurrentScope().isPresent()) {
      if (scope.getEnclosingScope() != getCurrentScope().get()) {
        Log.warn("0xA1043 The enclosing scope is not the same as the current scope on the stack.");
      }
    }

    if (firstCreatedScope == null) {
      firstCreatedScope = scope;
    }

    scopeStack.addLast(scope);
  }

  /* generated by template core.Method*/
  public  final Optional<ICD4CodeScope> getCurrentScope ()  {
    return Optional.ofNullable(scopeStack.peekLast());
  }

  /* generated by template core.Method*/
  public  final  Optional<de.monticore.cd4code._symboltable.ICD4CodeScope> removeCurrentScope ()  {
    return Optional.ofNullable(scopeStack.pollLast());
  }

  /* generated by template core.Method*/
  protected  void setCDCompilationUnitScopeStack (Deque<de.monticore.cd4code._symboltable.ICD4CodeScope> scopeStack)  {
    this.scopeStack = scopeStack;
  }

  /* generated by template core.Method*/
  public  de.monticore.cd4code._symboltable.ICD4CodeScope createScope (boolean shadowing)  {
    /* generated by template _symboltable.symboltablecreator.CreateScope*/

    de.monticore.cd4code._symboltable.ICD4CodeScope scope = de.monticore.cd4code.CD4CodeMill.scope();
    scope.setShadowing(shadowing);
    return scope;
  }

  /* generated by template core.Method*/
  public  void addToScope (de.monticore.cd4codebasis._symboltable.CDMethodSignatureSymbol symbol)  {
    /* generated by template _symboltable.symboltablecreator.AddToScope*/

    addToScope((de.monticore.symbols.oosymbols._symboltable.MethodSymbol) symbol);
    if (getCurrentScope().isPresent()) {
      getCurrentScope().get().add(symbol);
    } else {
      Log.warn("0xA50212 Symbol cannot be added to current scope, since no scope exists.");
    }

  }

  /* generated by template core.Method*/
  public  void addToScope (de.monticore.cdassociation._symboltable.CDAssociationSymbol symbol)  {
    /* generated by template _symboltable.symboltablecreator.AddToScope*/

    if (getCurrentScope().isPresent()) {
      getCurrentScope().get().add(symbol);
    } else {
      Log.warn("0xA50212 Symbol cannot be added to current scope, since no scope exists.");
    }

  }

  /* generated by template core.Method*/
  public  void addToScope (de.monticore.cdassociation._symboltable.CDRoleSymbol symbol)  {
    /* generated by template _symboltable.symboltablecreator.AddToScope*/

    addToScope((de.monticore.symbols.oosymbols._symboltable.FieldSymbol) symbol);
    if (getCurrentScope().isPresent()) {
      getCurrentScope().get().add(symbol);
    } else {
      Log.warn("0xA50212 Symbol cannot be added to current scope, since no scope exists.");
    }

  }

  /* generated by template core.Method*/
  public  void addToScope (de.monticore.cdbasis._symboltable.CDPackageSymbol symbol)  {
    /* generated by template _symboltable.symboltablecreator.AddToScope*/

    if (getCurrentScope().isPresent()) {
      getCurrentScope().get().add(symbol);
    } else {
      Log.warn("0xA50212 Symbol cannot be added to current scope, since no scope exists.");
    }

  }

  /* generated by template core.Method*/
  public  void addToScope (de.monticore.cdbasis._symboltable.CDTypeSymbol symbol)  {
    /* generated by template _symboltable.symboltablecreator.AddToScope*/

    addToScope((de.monticore.symbols.oosymbols._symboltable.OOTypeSymbol) symbol);
    if (getCurrentScope().isPresent()) {
      getCurrentScope().get().add(symbol);
    } else {
      Log.warn("0xA50212 Symbol cannot be added to current scope, since no scope exists.");
    }

  }

  /* generated by template core.Method*/
  public  void addToScope (de.monticore.symbols.oosymbols._symboltable.OOTypeSymbol symbol)  {
    /* generated by template _symboltable.symboltablecreator.AddToScope*/

    addToScope((de.monticore.symbols.basicsymbols._symboltable.TypeSymbol) symbol);
    if (getCurrentScope().isPresent()) {
      getCurrentScope().get().add(symbol);
    } else {
      Log.warn("0xA50212 Symbol cannot be added to current scope, since no scope exists.");
    }

  }

  /* generated by template core.Method*/
  public  void addToScope (de.monticore.symbols.oosymbols._symboltable.FieldSymbol symbol)  {
    /* generated by template _symboltable.symboltablecreator.AddToScope*/

    addToScope((de.monticore.symbols.basicsymbols._symboltable.VariableSymbol) symbol);
    if (getCurrentScope().isPresent()) {
      getCurrentScope().get().add(symbol);
    } else {
      Log.warn("0xA50212 Symbol cannot be added to current scope, since no scope exists.");
    }

  }

  /* generated by template core.Method*/
  public  void addToScope (de.monticore.symbols.oosymbols._symboltable.MethodSymbol symbol)  {
    /* generated by template _symboltable.symboltablecreator.AddToScope*/

    addToScope((de.monticore.symbols.basicsymbols._symboltable.FunctionSymbol) symbol);
    if (getCurrentScope().isPresent()) {
      getCurrentScope().get().add(symbol);
    } else {
      Log.warn("0xA50212 Symbol cannot be added to current scope, since no scope exists.");
    }

  }

  /* generated by template core.Method*/
  public  void addToScope (de.monticore.symbols.basicsymbols._symboltable.DiagramSymbol symbol)  {
    /* generated by template _symboltable.symboltablecreator.AddToScope*/

    if (getCurrentScope().isPresent()) {
      getCurrentScope().get().add(symbol);
    } else {
      Log.warn("0xA50212 Symbol cannot be added to current scope, since no scope exists.");
    }

  }

  /* generated by template core.Method*/
  public  void addToScope (de.monticore.symbols.basicsymbols._symboltable.TypeSymbol symbol)  {
    /* generated by template _symboltable.symboltablecreator.AddToScope*/

    if (getCurrentScope().isPresent()) {
      getCurrentScope().get().add(symbol);
    } else {
      Log.warn("0xA50212 Symbol cannot be added to current scope, since no scope exists.");
    }

  }

  /* generated by template core.Method*/
  public  void addToScope (de.monticore.symbols.basicsymbols._symboltable.TypeVarSymbol symbol)  {
    /* generated by template _symboltable.symboltablecreator.AddToScope*/

    addToScope((de.monticore.symbols.basicsymbols._symboltable.TypeSymbol) symbol);
    if (getCurrentScope().isPresent()) {
      getCurrentScope().get().add(symbol);
    } else {
      Log.warn("0xA50212 Symbol cannot be added to current scope, since no scope exists.");
    }

  }

  /* generated by template core.Method*/
  public  void addToScope (de.monticore.symbols.basicsymbols._symboltable.VariableSymbol symbol)  {
    /* generated by template _symboltable.symboltablecreator.AddToScope*/

    if (getCurrentScope().isPresent()) {
      getCurrentScope().get().add(symbol);
    } else {
      Log.warn("0xA50212 Symbol cannot be added to current scope, since no scope exists.");
    }

  }

  /* generated by template core.Method*/
  public  void addToScope (de.monticore.symbols.basicsymbols._symboltable.FunctionSymbol symbol)  {
    /* generated by template _symboltable.symboltablecreator.AddToScope*/

    if (getCurrentScope().isPresent()) {
      getCurrentScope().get().add(symbol);
    } else {
      Log.warn("0xA50212 Symbol cannot be added to current scope, since no scope exists.");
    }

  }
}
