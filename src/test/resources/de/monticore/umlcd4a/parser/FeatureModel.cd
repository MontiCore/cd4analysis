/*
 * ******************************************************************************
 * MontiCore Language Workbench, www.monticore.de
 * Copyright (c) 2017, MontiCore, All rights reserved.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project. If not, see <http://www.gnu.org/licenses/>.
 * ******************************************************************************
 */

package de.monticore.umlcd4a.parser;

import java.util.List;
import java.util.Set;
import java.util.Date;

classdiagram FeatureModel {

  public interface ASTFeatureGroup;

  public interface ASTFeatureModelNode;

  public class ASTFMCompilationUnit{
    protected java.util.List<String> r__package;
    protected java.util.List<de.monticore.types.Types.ASTImportStatement> importStatements;
    protected de.monticore.lang.featuremodel.FeatureModel.ASTFeatureModel featureModel;
  }

  public class ASTConstraint{
    protected de.monticore.java.JavaDSL.ASTExpression expression;
  }

  public class ASTFeatureModel{
    protected Optional<de.monticore.common.Common.ASTStereotype> stereotype;
    protected String name;
    protected java.util.List<de.monticore.lang.featuremodel.FeatureModel.ASTFeatureDef> featureDefs;
    protected java.util.List<de.monticore.lang.featuremodel.FeatureModel.ASTFeatureConstraint> featureConstraints;
  }

  public class ASTFeatureConstraint{
    protected java.util.List<de.monticore.lang.featuremodel.FeatureModel.ASTConstraint> constraints;
  }

  public class ASTFeatureDef{
    protected Optional<de.monticore.common.Common.ASTStereotype> stereotype;
    protected String name;
    protected Optional<de.monticore.lang.featuremodel.FeatureModel.ASTFeatureGroup> featureGroup;
    protected boolean root;
  }

  public class ASTCompositeFeature implements de.monticore.lang.featuremodel.FeatureModel.ASTFeatureGroup{
    protected java.util.List<de.monticore.lang.featuremodel.FeatureModel.ASTFeature> features;
  }

  public class ASTXorFeature implements de.monticore.lang.featuremodel.FeatureModel.ASTFeatureGroup{
    protected java.util.List<de.monticore.lang.featuremodel.FeatureModel.ASTFeature> features;
  }

  public class ASTOrFeature implements de.monticore.lang.featuremodel.FeatureModel.ASTFeatureGroup{
    protected java.util.List<de.monticore.lang.featuremodel.FeatureModel.ASTFeature> features;
  }

  public class ASTCardinalizedFeature implements de.monticore.lang.featuremodel.FeatureModel.ASTFeatureGroup{
    protected de.monticore.common.Common.ASTCardinality cardinality;
    protected java.util.List<de.monticore.lang.featuremodel.FeatureModel.ASTFeature> features;
  }

  public class ASTFeature{
    protected String name;
    protected boolean optional;
  }

  enum FeatureModelLiterals{
    QUESTION;
  }

}
