/*
 * ******************************************************************************
 * MontiCore Language Workbench, www.monticore.de
 * Copyright (c) 2017, MontiCore, All rights reserved.
 *
 * This project is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this project. If not, see <http://www.gnu.org/licenses/>.
 * ******************************************************************************
 */

package de.monticore.umlcd4a.symboltable;

import de.monticore.umlcd4a.symboltable.CD2;

classdiagram CD1 {

  abstract class Creature {
     boolean extinct = true;
  }

  <<S1, S2>> class Person extends Creature {
     <<SF>> public String name;
     protected int age;
     private String secondName;
     private List<String> address;
     /*
     TODO: FullGenericTypes stehen nicht zur Verf√ºgung
     private List<? extends Printable> text;
     private List<? super Printable> photo;
     private List<List<String>> hobbies;
     */
     String setName(String name, String prefix);
     private int getAge();
  }

  protected interface Printable {
    protected void print(String... s);
  }

  interface Callable extends Printable;

  private class Prof extends Person implements Printable, Callable {
     / String uni;
    List<Person> pp;
  }

  public enum E implements Printable {
    A, B;
  }

  <<SA>> association member [*] Person <-> Prof [1];
  association ec [1..*] E <-> Callable [0..1];

}
