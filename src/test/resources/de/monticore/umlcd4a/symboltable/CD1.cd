package de.monticore.umlcd4a.symboltable;

import de.monticore.umlcd4a.symboltable.CD2;

classdiagram CD1 {

  abstract class Creature {
     boolean extinct = true;
  }

  <<S1, S2>> class Person extends Creature {
     <<SF>> public String name;
     protected int age;
     private String secondName;
     private List<String> address;
     private List<? extends Printable> text;
     private List<? super Printable> photo;
     private List<List<String>> hobbies;
     String setName(String name, String prefix);
     private int getAge();
  }

  protected interface Printable {
    protected void print(String... s);
  }

  interface Callable extends Printable;

  private class Prof extends Person implements Printable, Callable {
     / String uni;
    List<Person> pp;
  }

  public enum E implements Printable {
    A, B;
  }

  <<SA>> association member [*] Person <-> Prof [1];
  association ec [1..*] E <-> Callable [0..1];

}
