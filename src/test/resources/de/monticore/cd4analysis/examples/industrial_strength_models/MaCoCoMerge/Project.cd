/* (c) https://github.com/MontiCore/monticore */
/* Originated by MontiCore/RWTH Aachen (CC BY 4.0)*/

package de.monticore.be.domain;

import java.time.ZonedDateTime;

classdiagram Project {


  //----------------------------------------------
  // =============== Projekte ===============
  //----------------------------------------------

  abstract class Projekt {
    String name;
    String kuerzel;
    Optional<Long> minPM;
    Optional<Long> maxPM;
    Optional<Long> finanzPM;
    Optional<ZonedDateTime> laufzeitVon;
    Optional<ZonedDateTime> laufzeitBis;
    Optional<String> kommentar;
    Optional<String> foerdergeberAZ;
    ProjektStatus status;
    boolean istAktiv;
    boolean lockedForStundenzettel;
    List<ZonedDateTime> lockedMonths;
  }

  association [1] Projekt -> Aufwand [*];
  association [1] Projekt -> Arbeitspaket [*];
  association [1] Projekt -> Anstellung [*];
  association [*] Projekt -> Konto [0..1];
  association [*] Projekt -> (hauptverantwortlich) Person [*];
  association [1] Projekt -> (notiz) Freitext [0..1];

  class Auftragsprojekt extends Projekt {
    Optional<String> nummer;
    ProjektTyp typ;
    Optional<String> regelung;
  }

  class Organisation extends Projekt {
  }

  class Lehre extends Projekt {
    long stunden;
  }

  class Arbeitspaket {
    String nummer;
    String name;
    Optional<String>  beschreibung;
    Optional<ZonedDateTime> beginnDatum;
    Optional<ZonedDateTime> endeDatum;
    Optional<Long> pMs;
    Optional<Long> stunden;
  }

  class Aufwand {
    /long pM;
    ZahlenWert umfang;
    ZonedDateTime laufzeitVon;
    ZonedDateTime laufzeitBis;
  }

  association [*] Aufwand -> Person [0..1];

  class Anstellung {
    Optional<String> bezeichnung;
    ZahlenWert umfang;
    ZonedDateTime von;
    ZonedDateTime bis;
    boolean verfaellt;
    Optional<Stellentyp> min;
    Optional<Stellentyp> max;
    /long pM;
    BeschaeftigungsArt beschaeftigungsArt;
  }

  association [*] Anstellung -> Person [0..1];

  class Stellentyp {
    Optional<String> entgeltgruppe;
    Optional<String> entgeltstufe;
  }

  enum ProjektStatus {
    IN_DEFINITION,
    BEANTRAGT,
    GENEHMIGT,
    ABGELEHNT,
    LAUFEND,
    FACHLICH_ABGESCHLOSSEN,
    ENDBERICHT_EINGEREICHT,
    INPRUEFUNG,
    GEPRUEFT,
    ABGERECHNET,
    ABGESCHLOSSEN,
    ARCHIVIERT;
  }

  enum ProjektArt {
    AUFTRAG,
    ORGANISATION,
    LEHRE,
    NONE;
  }

  enum ProjektTyp {
    HOHEITLICH,
    INDUSTRIE,
    UNIVERSITAET,
    SONSTIGE;
  }


}
